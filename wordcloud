<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Tagcloud</title>
    <style>
        html, body{
            margin: 0;
            padding: 0;
        }
    </style>
    <style>
        #word-cloud{
            height: 90vh;
            width: 90vw;
            margin: auto auto;
            /*font-size: 6vmin;*/
        }
    </style>
    <style>
        a {
            text-decoration: none;
        }
        
        .loader{
            position:fixed;
            width: 100%;
            height: 100%;
            z-index: 99;
            top: 0;
            left: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .loader.hidden{
            animation: fadeOut 1s;
            animation-fill-mode: forwards;
        }
        @keyframes fadeOut {
            100%{
                opacity: 0;
                visibility: hidden;
            }
        }
    </style>
</head>
<body>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<div id="word-cloud"></div>

<div class="loader">
    <img src="../../Desktop/tagcloud/Spinner-1.3s-250px(1).gif" alt="Loading...">
</div>

<script>
    let config = {
        trace: true,
        spiralResolution: 1, //Lower = better resolution
        spiralLimit: 500 * 5,
        lineHeight: 0.8,
        xWordPadding: 0,
        yWordPadding: 2,
        font: "Aileron"
    };

    window.onresize = function(){location.reload(true);};

    // window.addEventListener("load", function(){
    //     let loader = document.querySelector(".loader");
    //     loader.className += " hidden";
    //
    // });

    let cloud = document.getElementById("word-cloud");
    cloud.style.position = "relative";
    cloud.style.fontFamily = config.font;

    let traceCanvas = document.createElement("canvas");
    traceCanvas.width = cloud.offsetWidth;
    traceCanvas.height = cloud.offsetHeight;
    let traceCanvasCtx = traceCanvas.getContext("2d");
    cloud.appendChild(traceCanvas);


    let startPoint = {
        x: cloud.offsetWidth / 2,
        y: cloud.offsetHeight / 2
    };

    let wordsDown = [];

    function titleCase(word){
        if (word.includes('-')){
            let temp = word.toLowerCase().split('-');
            for (let i = 0;i < temp.length; i++){
                temp[i] = temp[i][0].toUpperCase() + temp[i].slice(1);
            }
            return (temp.join('-'));
        }
        else{
            let temp = word.toLowerCase().split(' ');
            for (let i = 0;i < temp.length; i++){
                temp[i] = temp[i][0].toUpperCase() + temp[i].slice(1);
            }
            return (temp.join(' '));
        }
    }

    function createWordObject(word, category, frequency) {
        let wordContainer = document.createElement("div");
        wordContainer.style.position = "absolute";
        wordContainer.style.lineHeight = config.lineHeight;
        wordContainer.style.fontSize = 2*frequency+"vmin";
        // wordContainer.style.color = colors[Math.floor(Math.random() * colors.length)];
        w = document.createTextNode(word);
        let a = document.createElement('a');
        if (category == "person")
            a.style.color = '#413177';
        else if (category == "place")
            a.style.color = '#5E7E16';
        else
            a.style.color = '#864B18';
        a.href = "https://onomedia.today/dev?type=search&value=";
        let titleWord = titleCase(word);
        a.href += titleWord;
        a.appendChild(w);
        wordContainer.appendChild(a);
        return wordContainer;
    }

    function placeWord(word, x, y) {

        cloud.appendChild(word);
        word.style.left = x - word.offsetWidth/2 + "px";
        word.style.top = y - word.offsetHeight/2 + "px";

        wordsDown.push(word.getBoundingClientRect());
    }


    function spiral(i, callback) {
        return callback ? callback() : null;
    }

    function intersect(word, x, y) {
        cloud.appendChild(word);

        word.style.left = x - word.offsetWidth/2 + "px";
        word.style.top = y - word.offsetHeight/2 + "px";

        let currentWord = word.getBoundingClientRect();

        cloud.removeChild(word);

        for(var i = 0; i < wordsDown.length; i+=1){
            var comparisonWord = wordsDown[i];

            if(!(currentWord.right + config.xWordPadding < comparisonWord.left - config.xWordPadding ||
                currentWord.left - config.xWordPadding > comparisonWord.right + config.xWordPadding ||
                currentWord.bottom + config.yWordPadding < comparisonWord.top - config.yWordPadding ||
                currentWord.top - config.yWordPadding > comparisonWord.bottom + config.yWordPadding)){

                return true;
            }
        }

        return false;
    }


    let people = [];
    let places = [];
    let things = [];
    let whatUrl = "https://api.onomedia.today/api/trends/what";
    let whoUrl = "https://api.onomedia.today/api/trends/who";
    let whereUrl = "https://api.onomedia.today/api/trends/where";
    

    let secondRequest = new XMLHttpRequest();
    secondRequest.open('GET', whatUrl);
    secondRequest.responseType = 'json';
    secondRequest.send();
    secondRequest.onload = function(){
        let firstRequest = new XMLHttpRequest();
        firstRequest.open('GET', whereUrl);
        firstRequest.responseType = 'json';
        firstRequest.send();
        firstRequest.onload = function(){
            let loader = document.querySelector(".loader");
            loader.className += " hidden";
            let where = firstRequest.response;
            for (let i = 0; i <= 5; i++){
                places.push(where[`${i}`])
            }
            let what = secondRequest.response;
            for (let i = 0; i <= 5; i++){
                things.push(what[`${i}`])
            }
            let request = new XMLHttpRequest();
            request.open('GET', whoUrl);
            request.responseType = 'json';
            request.send();
            request.onload = function() {
                let who = request.response;
                for (let i = 0; i <= 5; i++) {
                    people.push(who[`${i}`])
                }
                let words = [];
                words.push(...people,...places,...things);
                
                //words for example
                /*words = [["ГОСДУМА",2], ["ВЛАДИМИР ЗЕЛЕНСКИЙ",2], ["МИД",5], ["АЛЛА ИЛЬИНА",3], ["СЕРГЕЙ ЛАВРОВ",5], ["ТУРЦИЯ",4],["ФСБ",3],["МВД",3],["БЕЛАРУСЬ",2],["СЛЕДСТВЕННЫЙ КОМИТЕТ",3],
                    ["ФРГ",2],["ДМИТРИЙ ПЕСКОВ",3],["МИНСК",3],["БЕЛТА",2],["МИХАИЛ МИШУСТИН",6],["АЛЕКСАНДР ЛУКАШЕНКО",2],["КНР",4],["САНКТ-ПЕТЕРБУРГ",3]];
                people = ["ВЛАДИМИР ЗЕЛЕНСКИЙ", "АЛЛА ИЛЬИНА", "СЕРГЕЙ ЛАВРОВ", "ДМИТРИЙ ПЕСКОВ", "МИХАИЛ МИШУСТИН","АЛЕКСАНДР ЛУКАШЕНКО"];
                places = ["ТУРЦИЯ", "БЕЛАРУСЬ", "ФРГ", "МИНСК", "КНР", "САНКТ-ПЕТЕРБУРГ"];*/

                words.sort(function(a, b) {
                    if (a[1] < b[1])
                        return 1;
                    if (a[1] > b[1])
                        return -1;
                    if (a[1] == b[1]){
                        if (a[0].length >= b[0].length)
                            return -1;
                        else
                            return 1;
                    }

                });
                (function placeWords() {
                    for (let i = 0; i < words.length; i ++) {
                        if (people.includes(words[i][0]))
                            word = createWordObject(words[i][0],'person',words[i][1]);
                        else if (places.includes(words[i][0]))
                            word = createWordObject(words[i][0],'place',words[i][1]);
                        else
                            word = createWordObject(words[i][0],'thing',words[i][1]);
                        for (let j = 0; j < config.spiralLimit; j++) {
                            if (spiral(j, function () {
                                let angle = config.spiralResolution * j;
                                let x = (1 + angle) * 2 * Math.cos(angle);
                                // if (Math.random() < 0.5){
                                //     x -= Math.floor(Math.random() * 75);
                                // }
                                // else {
                                //     x += Math.floor(Math.random() * 75);
                                // }
                                let y = (1 + angle) * 1.5 * Math.sin(angle);
                                if (!intersect(word, startPoint.x + x, startPoint.y + y)) {
                                    placeWord(word, startPoint.x + x, startPoint.y + y);
                                    return true;
                                }
                            })) {
                                break;
                            }
                        }
                    }
                })();

            };
        };

    }
</script>
</body>
</html>
